name: Scheduled Swing Scan

on:
  workflow_dispatch: {}   # manual run button
  schedule:
    # 10:30 / 11:30 / 12:30 ET (Monâ€“Fri). During EDT (UTC-4) these are 14:30/15:30/16:30 UTC.
    - cron: "30 14 * * 1-5"
    - cron: "30 15 * * 1-5"
    - cron: "30 16 * * 1-5"

jobs:
  run-and-log:
    runs-on: ubuntu-latest
    permissions:
      contents: write   # allow pushing to the repo
    steps:
      - name: Check out repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure data branch exists locally
        run: |
          git fetch origin data || true
          if git show-ref --verify --quiet refs/remotes/origin/data; then
            git checkout -B data origin/data
          else
            # create data branch from empty tree if it doesn't exist
            git checkout --orphan data
            rm -rf .
            mkdir -p history
            echo "RunTimeET,CSVPath,PassCount" > history/index.csv
            git add history
            git commit -m "Initialize data branch"
          fi

      - name: Bring in scanner code from main
        run: |
          git checkout main -- swing_options_screener.py
          git checkout main -- scripts/run_and_log.py || true
          # fallback in case scripts/ doesn't exist yet
          mkdir -p scripts
          if [ ! -f scripts/run_and_log.py ]; then mv run_and_log.py scripts/run_and_log.py; fi

      - name: Run scan and write history files
        env:
          TZ: America/New_York
        run: |
          python scripts/run_and_log.py

      - name: Commit & push history updates to data branch
        run: |
          git add history
          if git diff --cached --quiet; then
            echo "No history changes to commit."
          else
            ts=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
            git commit -m "Scan results: ${ts}"
            git push origin data
          fi
