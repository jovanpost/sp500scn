name: Scheduled Swing Scan

on:
  workflow_dispatch: {}
  schedule:
    # 10:30 / 11:30 / 12:30 ET (Mon–Fri). During EDT (UTC-4) these are ~14:30/15:30/16:30 UTC.
    - cron: "30 14 * * 1-5"
    - cron: "30 15 * * 1-5"
    - cron: "30 16 * * 1-5"
    # Nightly outcome check after US close (~23:30 UTC)
    - cron: "30 23 * * 1-5"

permissions:
  contents: write

# prevent overlapping runs
concurrency:
  group: swing-scan
  cancel-in-progress: false

jobs:
  run-and-log:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r scripts/requirements.txt

      - name: Business-day / holiday gate (US Markets, NY time)
        id: bizgate
        shell: bash
        run: |
          set -e
          export TZ=America/New_York
          TODAY=$(date +%Y-%m-%d)
          DOW=$(date +%u)  # 1..7 (Mon..Sun)

          # Skip weekends
          if [ "$DOW" -gt 5 ]; then
            echo "Weekend in New York – skipping."
            echo "run=no" >> $GITHUB_OUTPUT
            exit 0
          fi

          # US market holidays (full-day) for 2025–2026
          HOLIDAYS=(
            2025-01-01 2025-01-20 2025-02-17 2025-04-18 2025-05-26 2025-06-19 2025-07-04 2025-09-01 2025-11-27 2025-12-25
            2026-01-01 2026-01-19 2026-02-16 2026-04-03 2026-05-25 2026-06-19 2026-07-03 2026-09-07 2026-11-26 2026-12-25
          )
          for H in "${HOLIDAYS[@]}"; do
            if [ "$TODAY" = "$H" ]; then
              echo "US market holiday ($H) – skipping."
              echo "run=no" >> $GITHUB_OUTPUT
              exit 0
            fi
          done

          echo "run=yes" >> $GITHUB_OUTPUT

      - name: First intraday wins (allow nightly)
        id: onceday
        if: steps.bizgate.outputs.run == 'yes'
        shell: bash
        run: |
          set -e
          export TZ=America/New_York
          HOUR=$(date +%H)             # 00–23 in ET
          TODAY=$(date +%Y-%m-%d)

          # Only one of the three intraday slots (10–12 ET)
          if [ "$HOUR" -ge 10 ] && [ "$HOUR" -le 12 ]; then
            if ls data/history/pass_${TODAY//-/}*.csv >/dev/null 2>&1; then
              echo "Intraday scan already ran for $TODAY – skipping this slot."
              echo "skip=true" >> $GITHUB_OUTPUT
              exit 0
            fi
          fi

          echo "skip=false" >> $GITHUB_OUTPUT

      - name: Run screener and write history files
        if: steps.bizgate.outputs.run == 'yes' && steps.onceday.outputs.skip == 'false'
        env:
          # Make local modules importable (swing_options_screener, etc.)
          PYTHONPATH: .:./scripts
        run: |
          set -e
          mkdir -p data/history data/logs
          # Run the scan; script writes pass_*.csv + updates outcomes.csv
          python scripts/run_and_log.py --universe sp500 --with-options | tee "data/logs/scan_$(date -u +%Y%m%d-%H%M%S).txt"

      - name: Commit history updates (pass_*.csv, outcomes.csv, logs)
        run: |
          set -e

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage whatever changed this run (ignore if patterns don't match)
          git add -A data/history/*.csv 2>/dev/null || true
          git add -A data/logs/*.txt     2>/dev/null || true

          # If nothing was staged, there is nothing to commit/push
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          # Commit first, then rebase onto latest main (safe with autostash), then push
          git commit -m "history: update $(date -u +%Y-%m-%dT%H:%M:%SZ)"
          git fetch origin main
          git -c rebase.autoStash=true pull --rebase origin main
          git push origin HEAD:main
