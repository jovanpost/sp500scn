name: Yahoo RAW batch

on:
  workflow_dispatch:
    inputs:
      tickers:
        description: "Comma-separated tickers (e.g. AAPL,MSFT,NVDA)"
        required: true
        default: "AAPL,MSFT"
      start:
        description: "Start date (YYYY-MM-DD)"
        required: false
        default: "1996-01-01"
      end:
        description: "End date (YYYY-MM-DD, optional; blank = today)"
        required: false
        default: ""

permissions:
  contents: read

concurrency:
  group: yahoo-raw-batch
  cancel-in-progress: false

jobs:
  ingest:
    name: Ingest
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt || true; fi
          pip install "yfinance==0.2.43" "pandas==2.2.3" "pyarrow==15.0.2" "requests==2.32.3" "urllib3==2.2.2"

      - name: Run ingest (Yahoo RAW if possible)
        env:
          TICKERS: ${{ inputs.tickers }}
          START: ${{ inputs.start }}
          END: ${{ inputs.end }}
        shell: bash
        run: |
          python - <<'PY'
          import os, sys, json, requests
          from data_lake.storage import Storage
          from data_lake.ingest import ingest_batch, lake_file_is_raw
          try:
              from data_lake.ingest import ingest_raw_yahoo_batch  # type: ignore
          except Exception:
              ingest_raw_yahoo_batch = None  # type: ignore

          def yahoo_ok() -> bool:
              try:
                  r = requests.get(
                      "https://query1.finance.yahoo.com/v7/finance/quote?symbols=AAPL",
                      headers={"User-Agent": "Mozilla/5.0"},
                      timeout=8,
                  )
                  print("Yahoo probe:", r.status_code, "len:", len(r.content))
                  return r.ok and "quoteResponse" in r.text
              except Exception as e:
                  print("Yahoo probe error:", e)
                  return False

          raw = (os.getenv("TICKERS") or "").strip()
          start = (os.getenv("START") or "").strip() or "1996-01-01"
          end = (os.getenv("END") or "").strip() or None

          tickers = [t.strip().upper() for t in raw.split(",") if t.strip()]
          if not tickers:
              print("No tickers provided; exiting 0.")
              sys.exit(0)

          jobs = [{"ticker": t, "start": start, "end": end} for t in tickers]
          print("Jobs:", jobs)

          s = Storage.from_env()

          if yahoo_ok() and ingest_raw_yahoo_batch:
              print("Using Yahoo RAW batch helper.")
              summary = ingest_raw_yahoo_batch(s, jobs)
          elif yahoo_ok():
              print("Yahoo reachable but helper missing; using ingest_batch.")
              summary = ingest_batch(s, jobs)
          else:
              print("Yahoo not reachable from runner; skipping without error.")
              sys.exit(0)

          print(json.dumps(summary, indent=2))
          if summary.get("ok", 0) == 0:
              raise SystemExit("All jobs failed")
          PY
