name: Yahoo RAW batch

on:
  workflow_dispatch:
    inputs:
      tickers:
        description: "Comma-separated tickers (e.g. AAPL,MSFT,NVDA)"
        required: true
        default: "AAPL,MSFT"
      start:
        description: "Start date (YYYY-MM-DD)"
        required: false
        default: "1996-01-01"
      end:
        description: "End date (optional; blank = up to today)"
        required: false
        default: ""

jobs:
  ingest:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || true
          # make sure these are present even if requirements.txt changes
          pip install yfinance pandas pyarrow requests supabase

      - name: Ingest via Yahoo RAW batch
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        run: |
          python - <<'PY'
          import json, sys
          from datetime import datetime
          from urllib.parse import urlparse
          from data_lake.storage import Storage
          from data_lake.ingest import ingest_raw_yahoo_batch

          # ---- inputs ---------------------------------------------------------
          raw = "${{ github.event.inputs.tickers }}"
          start = "${{ github.event.inputs.start }}".strip() or "1996-01-01"
          end = "${{ github.event.inputs.end }}".strip() or None
          tickers = [t.strip().upper() for t in raw.split(",") if t.strip()]
          if not tickers:
              print("No tickers provided; nothing to do.")
              sys.exit(0)

          # ---- storage diagnostics -------------------------------------------
          s = Storage.from_env()
          diag = getattr(s, "diagnostics", lambda: {})()
          mode = diag.get("mode", getattr(s, "mode", None))
          bucket = diag.get("bucket", getattr(s, "bucket", None))
          host = urlparse(getattr(s, "supabase_url", "")).netloc
          print("Storage:", {"mode": mode, "bucket": bucket, "host": host})

          # ---- plan -----------------------------------------------------------
          jobs = [{"ticker": t, "start": start, "end": end} for t in tickers]
          print("Jobs:", jobs)

          # ---- run ------------------------------------------------------------
          summary = ingest_raw_yahoo_batch(s, jobs, progress_cb=None, pause_s=0.2)
          print("Summary:", json.dumps(summary, indent=2))

          # ---- write a tiny marker so we can confirm the bucket/path ----------
          ts = datetime.utcnow().strftime("%Y%m%d_%H%M%S")
          try:
              s.write_bytes(f"debug/ci_touch_{ts}.txt", b"ok")
              print(f"Wrote debug marker: debug/ci_touch_{ts}.txt")
          except Exception as e:
              print("WARN: could not write debug marker:", e)

          # ---- check existence of each output --------------------------------
          for t in tickers:
              path = f"prices/{t}.parquet"
              try:
                  exists = s.exists(path)
              except Exception:
                  try:
                      s.read_bytes(path); exists = True
                  except Exception:
                      exists = False
              wrote_ok = any(r.get("ticker")==t and not r.get("error") for r in summary.get("results", []))
              print(f"{t}: wrote_ok={wrote_ok}, exists_now={exists}, path={path}")

          # Fail only if *everything* failed (Yahoo can be flaky)
          if summary.get("ok", 0) == 0:
              raise SystemExit("All jobs failed")
          PY
